let npages = [0, 292, 396, 818, 1012, 1191, 1442, 1553, 1869, 2205, 2493, 2762, 3191, 3524, 3780, 4081, 4223, 4589, 5046, 5428, 5570, 5873, 6164, 6237, 6238];
let text = ['Graphs', 'Definition', '1', 'A', 'graph', 'is', 'a', 'set', 'of', 'vertices', 'and', 'a', 'set', 'of', 'edges', 'that', 'connect', 'pairs', 'of', 'distinct', 'vertices', '(with', 'at', 'most', 'one', 'edge', 'connecting', 'any', 'pair', 'of', 'vertices).', 'Grafo', 'G', '=', '(V,', 'E)', 'V', '—', 'conjunto', 'de', 'vértices', '(ou', 'nós)', 'E', '—', 'conjunto', 'de', 'arestas', '(ou', 'arcos)', 'cada', 'aresta', 'é', 'um', 'par', 'de', 'vértices', '(v,', 'w),', 'com', 'v,', 'w', '∈', 'V', 'se', 'o', 'par', 'for', 'ordenado,', 'o', 'grafo', 'é', 'dirigido,', 'ou', 'digrafo', 'um', 'vértice', 'w', 'é', 'adjacente', 'a', 'um', 'vértice', 'v', 'se', 'e', 'só', 'se', '(v,', 'w)', '∈', 'E', 'num', 'grafo', 'não', 'dirigido', 'com', 'aresta', '(v,', 'w)', 'e,', 'portanto,', 'também', 'com', 'aresta', '(w,v),', 'w', 'é', 'adjacente', 'a', 'v', 'e', 'v', 'adjacente', 'a', 'w.', 'Property', '1', 'A', 'graph', 'with', 'V', 'vertices', 'has', 'at', 'most', 'V', '(V', '–1)/2', 'edges.', 'Definition', '2', 'A', 'path', 'in', 'a', 'graph', 'is', 'a', 'sequence', 'of', 'vertices', 'in', 'which', 'each', 'successive', 'vertex', '(after', 'the', 'first)', 'is', 'adjacent', 'to', 'its', 'predecessor', 'in', 'the', 'path.', 'In', 'a', 'simple', 'path,', 'the', 'vertices', 'and', 'edges', 'are', 'distinct.', 'A', 'cycle', 'is', 'a', 'path', 'that', 'is', 'simple', 'except', 'that', 'the', 'first', 'and', 'final', 'vertices', 'are', 'the', 'same.', 'Caminho', '-', 'sequência', 'de', 'vértices', 'v1', ',', '...,', 'vn', 'tais', 'que', '(vi', ',', 'vi+1', ')', '∈', 'E,', '1', '≤', 'i', '<', 'n', 'comprimento', 'do', 'caminho', 'é', 'o', 'número', 'de', 'arestas,', 'n', '−', '1', 'se', 'n', '=', '1,', 'caminho', 'reduz-se', 'a', '1', 'vértice,', 'comprimento', '0', 'Ciclo', '(ou', 'circuito):', 'caminho', 'de', 'comprimento', '≥', '1', 'com', 'v1', '=', 'vn', 'Num', 'grafo', 'não', 'dirigido,', 'requer-se', 'que', 'as', 'arestas', 'sejam', 'diferentes', 'Definition', '3', 'A', 'graph', 'is', 'a', 'connected', 'graph', 'if', 'there', 'is', 'a', 'path', 'from', 'every', 'vertex', 'to', 'every', 'other', 'vertex', 'in', 'the', 'graph.', 'A', 'graph', 'that', 'is', 'not', 'connected', 'consists', 'of', 'a', 'set', 'of', 'connected', 'components,', 'which', 'are', 'maximal', 'connected', 'subgraphs.', 'Digrafo', 'com', 'a', 'mesma', 'propriedade:', 'fortemente', 'conexo,', 'se', 'p/', 'todo', 'v,', 'w', '∈', 'V', 'existir', 'em', 'G', 'um', 'caminho', 'de', 'v', 'para', 'w,', 'assim', 'como', 'de', 'w', 'para', 'v', 'Digrafo', 'fracamente', 'conexo:', 'se', 'o', 'seu', 'grafo', 'não', 'dirigido', 'é', 'conexo', 'Definition', '4', 'An', 'acyclic', 'connected', 'graph', 'is', 'called', 'a', 'tree', '(see', 'Chapter', '4).', 'A', 'set', 'of', 'trees', 'is', 'called', 'a', 'forest.', 'A', 'spanning', 'tree', 'of', 'a', 'connected', 'graph', 'is', 'a', 'subgraph', 'that', 'contains', 'all', 'of', 'that', "graph's", 'vertices', 'and', 'is', 'a', 'single', 'tree.', 'A', 'spanning', 'forest', 'of', 'a', 'graph', 'is', 'a', 'subgraph', 'that', 'contains', 'all', 'of', 'that', "graph's", 'vertices', 'and', 'is', 'a', 'forest.', 'Examples', 'Graphs', 'with', 'all', 'edges', 'present', 'are', 'called', 'complete', 'graphs.', 'We', 'define', 'the', 'complement', 'of', 'a', 'graph', 'G', 'by', 'starting', 'with', 'a', 'complete', 'graph', 'that', 'has', 'the', 'same', 'set', 'of', 'vertices', 'as', 'the', 'original', 'graph', 'and', 'then', 'removing', 'the', 'edges', 'of', 'G.', 'The', 'union', 'of', 'two', 'graphs', 'is', 'the', 'graph', 'induced', 'by', 'the', 'union', 'of', 'their', 'sets', 'of', 'edges.', 'The', 'union', 'of', 'a', 'graph', 'and', 'its', 'complement', 'is', 'a', 'complete', 'graph.', 'All', 'graphs', 'that', 'have', 'V', 'vertices', 'are', 'subgraphs', 'of', 'the', 'complete', 'graph', 'that', 'has', 'V', 'vertices.', 'The', 'total', 'number', 'of', 'different', 'graphs', 'that', 'have', 'V', 'vertices', 'is', '2^[V(V–1)/2]', '(the', 'number', 'of', 'different', 'ways', 'to', 'choose', 'a', 'subset', 'from', 'the', 'V(V', '–', '1)/2', 'possible', 'edges).', 'A', 'complete', 'subgraph', 'is', 'called', 'a', 'clique.', 'Definition', '5', 'We', 'consider', 'a', 'graph', 'to', 'be', 'dense', 'if', 'E', 'is', 'proportional', 'to', 'V', '2', 'and', 'sparse', 'otherwise', '(normally', 'proportional', 'to', 'V).', 'Definition', '6', 'Graphs', 'as', 'defined', 'to', 'this', 'point', 'are', 'called', 'undirected', 'graphs.', 'In', 'directed', 'graphs,', 'also', 'known', 'as', 'digraphs,', 'edges', 'are', 'one-way:', 'we', 'consider', 'the', 'pair', 'of', 'vertices', 'that', 'defines', 'each', 'edge', 'to', 'be', 'an', 'ordered', 'pair', 'that', 'specifies', 'a', 'one-way', 'adjacency', 'where', 'we', 'think', 'about', 'having', 'the', 'ability', 'to', 'get', 'from', 'the', 'first', 'vertex', 'to', 'the', 'second', 'but', 'not', 'from', 'the', 'second', 'vertex', 'to', 'the', 'first.The', 'first', 'vertex', 'in', 'a', 'directed', 'edge', 'is', 'called', 'the', 'source;', 'the', 'second', 'vertex', 'is', 'called', 'the', 'destination.', 'Definition', '7', 'A', 'directed', 'acyclic', 'graph', '(DAG)', 'is', 'a', 'digraph', 'that', 'has', 'no', 'directed', 'cycles.', 'Grafo', 'dirigido', 'sem', 'ciclos.', 'Para', 'qualquer', 'vértice', 'v,', 'não', 'há', 'nenhuma', 'ligação', 'dirigida', 'começando', 'e', 'acabando', 'em', 'v.', 'Representations', 'of', 'graphs', 'We', 'can', 'choose', 'between', 'two', 'standard', 'ways', 'to', 'represent', 'a', 'graph', 'G', '=', '(V', ',', 'E):', 'as', 'a', 'collection', 'of', 'adjacency', 'lists', 'or', 'as', 'an', 'adjacency', 'matrix.', 'Either', 'way', 'applies', 'to', 'both', 'directed', 'and', 'undirected', 'graphs.', 'Because', 'the', 'adjacency-list', 'representation', 'provides', 'a', 'compact', 'way', 'to', 'represent', 'sparse', 'graphs', '—', 'those', 'for', 'which', 'E', 'is', 'much', 'less', 'than', 'V', '2', '—', 'it', 'is', 'usually', 'the', 'method', 'of', 'choice.', 'We', 'may', 'prefer', 'an', 'adjacency-matrix', 'representation,', 'however,', 'when', 'the', 'graph', 'is', 'dense', '—', 'E', 'is', 'close', 'to', 'V', '2', '—', 'or', 'when', 'we', 'need', 'to', 'be', 'able', 'to', 'tell', 'quickly', 'if', 'there', 'is', 'an', 'edge', 'connecting', 'two', 'given', 'vertices.', 'The', 'adjacency-list', 'representation', 'of', 'a', 'graph', 'G', '=', '(V', ',', 'E)', 'consists', 'of', 'an', 'array', 'Adj', 'of', 'V', 'lists,', 'one', 'for', 'each', 'vertex', 'in', 'V', '.', 'For', 'each', 'u', '∈', 'V', ',', 'the', 'adjacency', 'list', 'Adj[u]', 'contains', 'all', 'the', 'vertices', 'v', 'such', 'that', 'there', 'is', 'an', 'edge', '(u,', 'v)', '∈', 'E', '.', 'That', 'is,', 'Adj[u]', 'consists', 'of', 'all', 'the', 'vertices', 'adjacent', 'to', 'u', 'in', 'G.', '(Alternatively,', 'it', 'may', 'contain', 'pointers', 'to', 'these', 'vertices.)', 'Space', 'occupied', 'is', 'O(E', '+V)', 'We', 'can', 'readily', 'adapt', 'adjacency', 'lists', 'to', 'represent', 'weighted', 'graphs,', 'that', 'is,', 'graphs', 'for', 'which', 'each', 'edge', 'has', 'an', 'associated', 'weight,', 'typically', 'given', 'by', 'a', 'weight', 'function.', 'A', 'potential', 'disadvantage', 'of', 'the', 'adjacency-list', 'representation', 'is', 'that', 'it', 'provides', 'no', 'quicker', 'way', 'to', 'determine', 'whether', 'a', 'given', 'edge', '(u,v)', 'is', 'present', 'in', 'the', 'graph', 'than', 'to', 'search', 'for', 'v', 'in', 'the', 'adjacency', 'list', 'Adj[u].', 'An', 'adjacency-matrix', 'representation', 'of', 'the', 'graph', 'remedies', 'this', 'disadvantage,', 'but', 'at', 'the', 'cost', 'of', 'using', 'asymptotically', 'more', 'memory.', 'The', 'adjacency-matrix', 'assumes', 'that', 'the', 'vertices', 'are', 'numbered', '1,', '2,', '...,', 'V', 'in', 'some', 'arbitrary', 'manner.', 'Then', 'the', 'adjacency-matrix', 'representation', 'of', 'a', 'graph', 'G', 'consists', 'of', 'a', 'V', '×', 'V', 'matrix', 'A', '=', '(aij', ')', 'such', 'that', 'aij', '=', '{', '1', 'if', '(i,', 'j)', '∈', 'E', '0', 'otherwise', 'Instead', 'of', '0', 'or', '1,', 'we', 'could', 'have', 'the', 'weights', 'Two', 'representations', 'of', 'an', 'undirected', 'graph.', '(a)', 'An', 'undirected', 'graph', 'G', 'with', '5', 'vertices', 'and', '7', 'edges.', '(b)', 'An', 'adjacency-list', 'representation', 'of', 'G.', '(c)', 'The', 'adjacency-matrix', 'representation', 'of', 'G', 'Two', 'representations', 'of', 'a', 'directed', 'graph.', '(a)', 'A', 'directed', 'graph', 'G', 'with', '6', 'vertices', 'and', '8', 'edges.', '(b)', 'An', 'adjacency-list', 'representation', 'of', 'G.', '(c)', 'The', 'adjacency-matrix', 'representation', 'of', 'G.', 'Codification', 'class', 'Graph', '{', 'ArrayList<Vertex>', 'vertexSet;', '}', 'class', 'Vertex', '{', 'String', 'name;', 'LinkedList<Edge>', 'adj;', '//', 'edges', 'leaving', 'the', 'vertex', '}', 'class', 'Edge', '{', 'Vertex', 'dest;', 'double', 'weight;', '}', 'Graph', 'Search', 'Depth-first', 'Search', 'The', 'strategy', 'followed', 'by', 'depth-first', 'search', 'is,', 'as', 'its', 'name', 'implies,', 'to', 'search', '“deeper”', 'in', 'the', 'graph', 'whenever', 'possible.', '1.', 'Depth-first', 'search', 'explores', 'edges', 'out', 'of', 'the', 'most', 'recently', 'discovered', 'vertex', 'v', 'that', 'still', 'has', 'unexplored', 'edges', 'leaving', 'it.', '2.', 'Once', 'all', 'of', 'v’s', 'edges', 'have', 'been', 'explored,', 'the', 'search', '“backtracks”', 'to', 'explore', 'edges', 'leaving', 'the', 'vertex', 'from', 'which', 'v', 'was', 'discovered.', 'This', 'process', 'continues', 'until', 'we', 'have', 'discovered', 'all', 'the', 'vertices', 'that', 'are', 'reachable', 'from', 'the', 'original', 'source', 'vertex.', '3.', 'If', 'any', 'undiscovered', 'vertices', 'remain,', 'then', 'depth-first', 'search', 'selects', 'one', 'of', 'them', 'as', 'a', 'new', 'source,', 'and', 'it', 'repeats', 'the', 'search', 'from', 'that', 'source.', '4.', 'The', 'algorithm', 'repeats', 'this', 'entire', 'process', 'until', 'it', 'has', 'discovered', 'every', 'vertex.', 'G', '=', '(V,', 'E)', 'Adj(v)', '=', '{w', '|', '(v,', 'w)', 'in', 'E}', '(all', 'v', 'in', 'V)', 'DFS(G):', '1.', 'for', 'each', 'v', 'in', 'V:', '2.', 'visited(v)', '=', 'false', '3.', 'for', 'each', 'v', 'in', 'V:', '4.', 'if', 'not', 'visited(v):', '5.', 'DFS-VISIT(G,', 'v)', 'DFS-VISIT(G,', 'v):', '1.', 'visited(v)', '=', 'true', '2.', 'pre-process(v)', '3.', 'for', 'each', 'w', 'in', 'Adj(v)', '4.', 'if', 'not', 'visited(w)', '5.', 'DFS-VISIT(G,', 'w)', '6.', 'post-process(v)', 'The', 'running', 'time', 'of', 'DFS', 'is', 'therefore', 'O(V', '+', 'E)', 'Breadth-first', 'Search', 'Given', 'a', 'graph', 'G', 'and', 'a', 'distinguished', 'source', 'vertex', 's,', 'breadth-first', 'search', 'systematically', 'explores', 'the', 'edges', 'of', 'G', 'to', '“discover”', 'every', 'vertex', 'that', 'is', 'reachable', 'from', 's.', 'It', 'computes', 'the', 'distance', '(smallest', 'number', 'of', 'edges)', 'from', 's', 'to', 'each', 'reachable', 'vertex.', 'It', 'also', 'produces', 'a', '“breadth-first', 'tree”', 'with', 'root', 's', 'that', 'contains', 'all', 'reachable', 'vertices.', 'For', 'any', 'vertex', 'v', 'reachable', 'from', 's,', 'the', 'simple', 'path', 'in', 'the', 'breadth-first', 'tree', 'from', 's', 'to', 'v', 'corresponds', 'to', 'a', '“shortest', 'path”', 'from', 's', 'to', 'v', 'in', 'G,', 'that', 'is,', 'a', 'path', 'containing', 'the', 'smallest', 'number', 'of', 'edges.', 'The', 'algorithm', 'works', 'on', 'both', 'directed', 'and', 'undirected', 'graphs.', 'BFS(G,', 's):', '1.', 'for', 'each', 'v', 'in', 'V', '2.', 'discovered(v)', '=', 'false', '3.', 'Q', '=', 'Empty', '4.', 'ENQUEUE(Q,', 's)', '5.', 'discovered(s)', '=', 'true', '6.', 'while', 'Q', 'is', 'not', 'Empty', '7.', 'v', '=', 'DEQUEUE(Q)', '8.', 'pre-process(v)', '9.', 'for', 'each', 'w', 'in', 'Adj(v)', '10.', 'if', 'not', 'discovered(w)', 'then', '11.', 'ENQUEUE(Q,', 'w)', '12.', 'discovered(w)', '=', 'true', '13.', 'post-process(v)', 'Se', 'em', 'vez', 'de', 'uma', 'fila', 'for', 'usada', 'uma', 'pilha,', 'obtém-se', 'um', 'algoritmo', 'iterativo', 'de', 'visita', 'em', 'profundidade!', 'Time', 'Complexity:', 'O(', 'V', '+', 'E', ')', 'Topological', 'sort', 'A', 'topological', 'sort', 'of', 'a', 'dag', 'is', 'a', 'linear', 'ordering', 'of', 'all', 'its', 'vertices', 'such', 'that', 'if', 'G', 'contains', 'an', 'edge', '(u,v)', 'then', 'u', 'appears', 'before', 'v', 'in', 'the', 'ordering.', '(If', 'the', 'graph', 'contains', 'a', 'cycle,', 'then', 'no', 'linear', 'ordering', 'is', 'possible.)', 'We', 'can', 'view', 'a', 'topological', 'sort', 'of', 'a', 'graph', 'as', 'an', 'ordering', 'of', 'its', 'vertices', 'along', 'a', 'horizontal', 'line', 'so', 'that', 'all', 'directed', 'edges', 'go', 'from', 'left', 'to', 'right.', 'General', 'Method:', '1.', 'Descobrir', 'um', 'vértice', 'sem', 'arestas', 'de', 'chegada', '(indegree=0)', '2.', 'Imprimir', 'o', 'vértice', '3.', 'Eliminá-lo,', 'assim', 'como', 'as', 'arestas', 'que', 'dele', 'saem', '4.', 'Repetir', 'o', 'processo', 'no', 'grafo', 'restante', 'TOP-SORT(', 'in', 'G=(V,E),', 'out', 'T):', '1.', 'for', 'each', 'v', 'in', 'V:', '2.', 'indegree(v)', '=', '0', '3.', 'for', 'each', 'v', 'in', 'V:', '4.', 'for', 'each', 'w', 'in', 'adj(v):', '5.', 'indegree(w)', '=', 'indegree(w)', '+', '1', '6.', 'C', '=', '{', '}', '//', 'Pode', 'ser', 'uma', 'fila', '(Queue),', 'pilha', '(Stack),', 'etc.', '7.', 'for', 'each', 'v', 'in', 'V:', '8.', 'if', 'indegree(v)', '=', '0:', '9.', 'C', '+=', '{v}', '10.', 'T', '=', '[', ']', '//', 'Pode', 'ser', 'uma', 'lista', '(LinkedList)', '11.', 'while', 'C', 'is', 'not', '{}:', '12.', 'v', '=', 'remove-one(C)', '13.', 'T', '+=', '[v]', '14.', 'for', 'each', 'w', 'in', 'adj(v):', '15.', 'indegree(w)', '=', 'indegree(w)', '–', '1', '16.', 'if', 'indegree(w)', '=', '0:', '17', 'C', '+=', '{w}', '18.', 'if', '|T|', 'is', 'not', '|V|:', '19.', 'Fail(“O', 'grafo', 'tem', 'ciclos”)', 'Se', 'as', 'inserções', 'e', 'eliminações', 'em', 'C', 'forem', 'efectuadas', 'em', 'tempo', 'constante', '(usando', 'por', 'exemplo', 'uma', 'fila', 'FIFO),', 'algoritmo', 'pode', 'ser', 'executado', 'em', 'tempo', 'O(V', '+', 'E)', 'o', 'corpo', 'do', 'ciclo', 'de', 'atualização', 'do', 'indegree', '(passos', '9,', '10,', '11)', 'é', 'executado', 'no', 'máximo', 'uma', 'vez', 'por', 'aresta', 'as', 'operações', 'de', 'inserção', 'e', 'remoção', 'na', 'fila', '(nos', 'passos', '4,', '7', 'e', '11)', 'são', 'executadas', 'no', 'máximo', 'uma', 'vez', 'por', 'vértice', 'a', 'inicialização', 'leva', 'um', 'tempo', 'proporcional', 'ao', 'tamanho', 'do', 'grafo', 'Single-Source', 'Shortest', 'Paths', 'In', 'a', 'shortest-paths', 'problem,', 'we', 'are', 'given', 'a', 'weighted,', 'directed', 'graph', 'G', '=', '(V', ',', 'E),', 'with', 'a', 'weight', 'function', 'w', ':', 'E', '→', 'R', 'mapping', 'edges', 'to', 'real-valued', 'weights.', 'The', 'weight', 'w(p)', 'of', 'path', 'p', '=', '⟨v0', ',', 'v1', ',', '...,', 'vk', '⟩', 'is', 'the', 'sum', 'of', 'the', 'weights', 'of', 'its', 'constituent', 'edges:', 'k', 'w(p)', '=', '∑', 'w(vi−1', ',', 'vi', ')', 'i=1', 'We', 'define', 'the', 'shortest-path', 'weight', 'from', 'u', 'to', 'v', 'by', 'δ(u,', 'v)', '=', '{', 'min{w(p)', ':', 'u', '⇝', 'v}', 'if', 'there', 'is', 'a', 'path', 'from', 'u', 'to', 'v,', '∞', 'otherwise', 'A', 'shortest', 'path', 'from', 'vertex', 'u', 'to', 'vertex', 'v', 'is', 'then', 'defined', 'as', 'any', 'path', 'p', 'with', 'weight', 'w(p)', '=', 'δ(u,', 'v)', 'Edge', 'weights', 'can', 'represent', 'metrics', 'other', 'than', 'distances,', 'such', 'as', 'time,', 'cost,', 'penalties,', 'loss,', 'or', 'any', 'other', 'quantity', 'that', 'accumulates', 'linearly', 'along', 'a', 'path', 'and', 'that', 'we', 'would', 'want', 'to', 'minimize.', 'The', 'breadth-first-search', 'algorithm', 'is', 'a', 'shortest-paths', 'algorithm', 'that', 'works', 'on', 'unweighted', 'graphs,', 'that', 'is,', 'graphs', 'in', 'which', 'each', 'edge', 'has', 'unit', 'weight.', 'Variants', 'In', 'this', 'chapter,', 'we', 'shall', 'focus', 'on', 'the', 'single-source', 'shortest-paths', 'problem:', 'given', 'a', 'graph', 'G,', 'we', 'want', 'to', 'find', 'a', 'shortest', 'path', 'from', 'a', 'given', 'source', 'vertex', 's', 'to', 'each', 'vertex', 'v', '.', 'The', 'algorithm', 'for', 'the', 'single-source', 'problem', 'can', 'solve', 'many', 'other', 'problems,', 'including', 'the', 'following', 'variants.', 'Single-destination', 'shortest-paths', 'problem', 'Single-pair', 'shortest-path', 'problem', 'All-pairs', 'shortest-paths', 'problem', 'Algorithms', 'Caso', 'de', 'grafos', 'dirigidos', 'não', 'pesados', 'baseado', 'em', 'pesquisa', 'em', 'largura,', 'O(V', '+', 'E)', 'Caso', 'de', 'grafos', 'dirigidos', 'pesados', 'Dijkstra,', 'algoritmo', 'ganancioso,', 'O(', '(V', '+', 'E)', 'x', 'log', 'V)', 'Caso', 'de', 'grafos', 'dirigidos', 'com', 'arestas', 'de', 'peso', 'negativo', 'Bellman-Ford,', 'programação', 'dinâmica,', 'O(E', 'x', 'V)', 'Caso', 'de', 'grafos', 'dirigidos', 'acíclicos', 'baseado', 'em', 'ordenação', 'topológica,', 'O(V', '+', 'E)', 'Negative-weight', 'edges', 'Some', 'shortest-paths', 'algorithms,', 'such', 'as', 'Dijkstra’s', 'algorithm,', 'assume', 'that', 'all', 'edge', 'weights', 'in', 'the', 'input', 'graph', 'are', 'nonnegative,', 'as', 'in', 'the', 'road-map', 'example.', 'Others,', 'such', 'as', 'the', 'Bellman-Ford', 'algorithm,', 'allow', 'negative-weight', 'edges', 'in', 'the', 'input', 'graph', 'and', 'produce', 'a', 'correct', 'answer', 'as', 'long', 'as', 'no', 'negative-weight', 'cycles', 'are', 'reachable', 'from', 'the', 'source.', 'Typically,', 'if', 'there', 'is', 'such', 'a', 'negative-weight', 'cycle,', 'the', 'algorithm', 'can', 'detect', 'and', 'report', 'its', 'existence.', 'Therefore,', 'without', 'loss', 'of', 'generality', 'we', 'can', 'assume', 'that', 'when', 'we', 'are', 'finding', 'shortest', 'paths,', 'they', 'have', 'no', 'cycles,', 'i.e.,', 'they', 'are', 'simple', 'paths.', 'Since', 'any', 'acyclic', 'path', 'in', 'a', 'graph', 'G', '=', '(V', ',', 'E)', 'contains', 'at', 'most', 'V', 'distinct', 'vertices,', 'it', 'also', 'contains', 'at', 'most', 'V', '−', '1', 'edges.', 'Thus,', 'we', 'can', 'restrict', 'our', 'attention', 'to', 'shortest', 'paths', 'of', 'at', 'most', 'V', '−', '1', 'edges.', 'Unweighted', 'digraphs', '-', 'Grafos', 'Dirigidos', 'não', 'Pesados', 'Método', 'básico', '(pesquisa', 'em', 'largura', '+', 'cálculo', 'de', 'distâncias):', '1.', 'Marcar', 'o', 'vértice', 's', 'com', 'distância', '0', 'e', 'todos', 'os', 'outros', 'com', 'distância', '∞', '2.', 'Entre', 'os', 'vértices', 'já', 'alcançados', '(distância', '\ue020', '=', '∞)', 'e', 'não', 'processados', '(no', 'passo', '3),', 'escolher', 'para', 'processar', 'o', 'vértice', 'v', 'marcado', 'com', 'distância', 'mínima', '3.', 'Processar', 'vértice', 'v:', 'analisar', 'os', 'adjacentes', 'de', 'v,', 'marcando', 'os', 'que', 'ainda', 'não', 'tinham', 'sido', 'alcançados', '(distância', '∞)', 'com', 'distância', 'de', 'v', 'mais', '1', '4.', 'Voltar', 'ao', 'passo', '2,', 'se', 'existirem', 'mais', 'vértices', 'para', 'processar', 'Usando', 'uma', 'fila', '(FIFO)', 'para', 'inserir', 'os', 'novos', 'vértices', 'Associa-se', 'a', 'cada', 'vértice', 'a', 'seguinte', 'informação:', 'dist:', 'distância', 'ao', 'vértice', 'inicial', 'path:', 'vértice', 'antecessor', 'no', 'caminho', 'mais', 'curto', '(inicializado', 'com', 'NULL)', 'SHORTEST-PATH-UNWEIGHTED(G=(V,E),', 's):', '1.', 'for', 'each', 'v', 'in', 'V:', '2.', 'dist(v)', '=', 'infinity', '3.', 'path(v)', '=', 'NULL', '4.', 'dist(s)', '=', '0', '5.', 'Q', '=', 'Empty', '6.', 'ENQUEUE(Q,', 's)', '7.', 'while', 'Q', 'is', 'not', 'Empty:', '8.', 'v', '=', 'DEQUEUE(Q)', '9.', 'for', 'each', 'w', 'in', 'Adj(v)', '10.', 'if', 'dist(w)', '=', 'infinity:', '11.', 'ENQUEUE(Q,', 'w)', '12.', 'dist(w)', '=', 'dist(v)', '+', '1', '13.', 'path(w)', '=', 'v', 'Tempo', 'de', 'execução:', 'O(E', '+', 'V)', ',', 'Espaço', 'auxiliar:', 'O(V)', 'Weighted', 'digraphs', '-', 'Grafos', 'Dirigidos', 'Pesados', 'Dijkstra’s', 'algorithm', 'solves', 'the', 'single-source', 'shortest-paths', 'problem', 'on', 'a', 'weighted,', 'directed', 'graph', 'G', '=', '(V', ',', 'E)', 'for', 'the', 'case', 'in', 'which', 'all', 'edge', 'weights', 'are', 'nonnegative.', 'Dijkstra’s', 'algorithm', 'maintains', 'a', 'set', 'S', 'of', 'vertices', 'whose', 'final', 'shortest-path', 'weights', 'from', 'the', 'source', 's', 'have', 'already', 'been', 'determined.', 'The', 'algorithm', 'repeatedly', 'selects', 'the', 'vertex', 'u', '∈', 'V', '−', 'S', 'with', 'the', 'minimum', 'shortest-path', 'estimate,', 'adds', 'u', 'to', 'S,', 'and', 'relaxes', 'all', 'edges', 'leaving', 'u.', 'In', 'the', 'following', 'implementation,', 'we', 'use', 'a', 'min-priority', 'queue', 'Q', 'of', 'vertices,', 'keyed', 'by', 'their', 'd', 'values.', 'Because', 'Dijkstra’s', 'algorithm', 'always', 'chooses', 'the', '“lightest”', 'or', '“closest”', 'vertex', 'in', 'V', '−', 'S', 'to', 'add', 'to', 'set', 'S', ',', 'we', 'say', 'that', 'it', 'uses', 'a', 'greedy', 'strategy.', 'DIJKSTRA', '(G,', 's):', '//', 'G=(V,E),', 's', 'in', 'V', '1.', 'for', 'each', 'v', 'in', 'V:', '2.', 'dist(v)', '=', 'infinity', '3.', 'path(v)', '=', 'NULL', '4.', 'dist(s)', '=', '0', '5.', 'Q', '=', 'Empty', '//', 'min-priority', 'queue', '6.', 'INSERT', '(Q,', '(s,', '0))', '//', 'inserts', 's', 'with', 'key', '0', '7.', 'while', 'Q', 'is', 'not', 'Empty:', '8.', 'v', '=', 'EXTRACT-MIN', '(Q)', '//', 'greedy', '9.', 'for', 'each', 'w', 'in', 'Adj(v):', '10.', 'if', 'dist(w)', '>', 'dist(v)', '+', 'weight(v,w):', '11.', 'dist(w)', '=', 'dist(v)', '+', 'weight(v,w)', '12.', 'path(w)', '=', 'v', '13.', 'if', 'w', 'not', 'in', 'Q:', '//', 'old', 'dist(w)', 'was', 'infinity', '14.', 'INSERT', '(Q,', '(w,', 'dist(w)))', '15.', 'else:', '16.', 'DECREASE-KEY', '(Q,', '(w,', 'dist(w)))', 'Tempo', 'de', 'Execução:', 'O(', '(V', '+', 'E)', 'x', 'log', 'V', ')', 'Negative', 'weighted', 'edges', '-', 'Arestas', 'com', 'peso', 'negativo', 'The', 'Bellman-Ford', 'algorithm', 'solves', 'the', 'single-source', 'shortest-paths', 'problem', 'in', 'the', 'general', 'case', 'in', 'which', 'edge', 'weights', 'may', 'be', 'negative.', 'Given', 'a', 'weighted,', 'directed', 'graph', 'G', '=', '(V', ',', 'E)', 'with', 'source', 's', 'and', 'weight', 'function', 'w', ':', 'E', '→', 'R,', 'the', 'Bellman-Ford', 'algorithm', 'returns', 'a', 'boolean', 'value', 'indicating', 'whether', 'or', 'not', 'there', 'is', 'a', 'negative-weight', 'cycle', 'that', 'is', 'reachable', 'from', 'the', 'source.', 'If', 'there', 'is', 'such', 'a', 'cycle,', 'the', 'algorithm', 'indicates', 'that', 'no', 'solution', 'exists.', 'If', 'there', 'is', 'no', 'such', 'cycle,', 'the', 'algorithm', 'produces', 'the', 'shortest', 'paths', 'and', 'their', 'weights.', 'The', 'algorithm', 'relaxes', 'edges,', 'progressively', 'decreasing', 'an', 'estimate', 'v.d', 'on', 'the', 'weight', 'of', 'a', 'shortest', 'path', 'from', 'the', 'source', 's', 'to', 'each', 'vertex', 'v', '∈', 'V', 'until', 'it', 'achieves', 'the', 'actual', 'shortest-path', 'weight', 'δ(s,', 'v).', 'The', 'algorithm', 'returns', 'T', 'RU', 'E', 'if', 'and', 'only', 'if', 'the', 'graph', 'contains', 'no', 'negative-weight', 'cycles', 'that', 'are', 'reachable', 'from', 'the', 'source.', 'BELLMAN-FORD', '(G,', 's):', '1.', 'for', 'each', 'v', 'in', 'V:', '2.', 'dist(v)', '=', 'infinity', '3.', 'path(v)', '=', 'nil', '4.', 'dist(s)', '=', '0', '5.', 'for', 'i', '=', '1', 'to', 'V', '-', '1:', '6.', 'for', 'each', '(v,', 'w)', 'in', 'E:', '7.', 'if', 'dist(w)', '>', 'dist(v)', '+', 'weight(v,w):', '8.', 'dist(w)', '=', 'dist(v)', '+', 'weight(v,w)', '9.', 'path(w)', '=', 'v', '10.', 'for', 'each', '(v,', 'w)', 'in', 'E:', '11.', 'if', 'dist(v)', '+', 'weight(v,w)', '<', 'dist(w):', '12.', 'fail("there', 'are', 'cycles', 'of', 'negative', 'weight")', 'Tempo', 'de', 'Execução:', 'O(E', 'x', 'V)', 'Em', 'cada', 'iteração', 'i,', 'o', 'algoritmo', 'processa', 'todas', 'as', 'arestas', 'e', 'garante', 'que', 'encontra', 'todos', 'os', 'caminhos', 'mais', 'curtos', 'com', 'até', 'i', 'arestas', '(e', 'possivelmente', 'alguns', 'mais', 'longos)', '(invariante', 'do', 'ciclo', 'principal).', 'Uma', 'vez', 'que', 'o', 'caminho', 'mais', 'comprido,', 'sem', 'ciclos,', 'tem', '|V|-1', 'arestas,basta', 'executar', 'no', 'máximo', '|V|-1', 'iterações', 'do', 'ciclo', 'principal', 'para', 'assegurar', 'que', 'todos', 'os', 'caminhos', 'mais', 'curtos', 'são', 'encontrados.', 'No', 'final', 'é', 'executada', 'mais', 'uma', 'iteração', 'para', 'ver', 'se', 'alguma', 'distância', 'pode', 'ser', 'melhorada;', 'se', 'for', 'o', 'caso,', 'significa', 'que', 'há', 'um', 'caminho', 'mais', 'curto', 'com', '|V|', 'arestas,', 'o', 'que', 'só', 'pode', 'acontecer', 'se', 'existir', 'pelo', 'menos', 'um', 'ciclo', 'de', 'peso', 'negativo.', 'Like', 'other', 'Dynamic', 'Programming', 'Problems,', 'the', 'algorithm', 'calculate', 'shortest', 'paths', 'in', 'bottom-up', 'manner.', 'It', 'first', 'calculates', 'the', 'shortest', 'distances', 'which', 'have', 'at-most', 'one', 'edge', 'in', 'the', 'path.', 'Then,', 'it', 'calculates', 'shortest', 'paths', 'with', 'at-most', '2', 'edges,', 'and', 'so', 'on.', 'After', 'the', 'i-th', 'iteration', 'of', 'outer', 'loop,', 'the', 'shortest', 'paths', 'with', 'at', 'most', 'i', 'edges', 'are', 'calculated.', 'There', 'can', 'be', 'maximum', '|V|', '–', '1', 'edges', 'in', 'any', 'simple', 'path,', 'that', 'is', 'why', 'the', 'outer', 'loop', 'runs', '|v|', '–', '1', 'times.', 'The', 'idea', 'is,', 'assuming', 'that', 'there', 'is', 'no', 'negative', 'weight', 'cycle,', 'if', 'we', 'have', 'calculated', 'shortest', 'paths', 'with', 'at', 'most', 'i', 'edges,', 'then', 'an', 'iteration', 'over', 'all', 'edges', 'guarantees', 'to', 'give', 'shortest', 'path', 'with', 'at-most', '(i+1)', 'edges.', 'Directed', 'acyclic', 'graphs', '-', 'grafos', 'acíclicos', 'By', 'relaxing', 'the', 'edges', 'of', 'a', 'weighted', 'DAG', '(directed', 'acyclic', 'graph)', 'G', '=', '(V', ',', 'E)', 'according', 'to', 'a', 'topological', 'sort', 'of', 'its', 'vertices,', 'we', 'can', 'compute', 'shortest', 'paths', 'from', 'a', 'single', 'source', 'in', 'O(V', '+', 'E)', 'time.', 'Shortest', 'paths', 'are', 'always', 'well', 'defined', 'in', 'a', 'DAG,', 'since', 'even', 'if', 'there', 'are', 'negative-weight', 'edges,', 'no', 'negative-weight', 'cycles', 'can', 'exist.', 'The', 'algorithm', 'starts', 'by', 'topologically', 'sorting', 'the', 'DAG', 'to', 'impose', 'a', 'linear', 'ordering', 'on', 'the', 'vertices.', 'If', 'the', 'DAG', 'contains', 'a', 'path', 'from', 'vertex', 'u', 'to', 'vertex', 'v,', 'then', 'u', 'precedes', 'v', 'in', 'the', 'topological', 'sort.', 'We', 'make', 'just', 'one', 'pass', 'over', 'the', 'vertices', 'in', 'the', 'topologically', 'sorted', 'order.', 'As', 'we', 'process', 'each', 'vertex,', 'we', 'relax', 'each', 'edge', 'that', 'leaves', 'the', 'vertex.', 'DAG-SHORTEST-PATHS', '(G,w,s):', '1.', 'topologically', 'sort', 'the', 'vertices', 'of', 'G', '2.', 'for', 'each', 'v', 'in', 'V:', '3.', 'dist(v)', '=', 'infinity', '4.', 'path(v)', '=', 'nil', '5.', 'dist(s)', '=', '0', '6.', 'for', 'each', 'v', 'in', 'G,', 'taken', 'in', 'topologically', 'sorted', 'order:', '7.', 'for', 'each', 'w', 'in', 'Adj(v):', '8.', 'if', 'dist(w)', '>', 'dist(v)', '+', 'weight(v,w):', '9.', 'dist(w)', '=', 'dist(v)', '+', 'weight(v,w)', '10.', 'path(w)', '=', 'v', 'Tempo', 'de', 'Execução:', 'O(', 'V', '+', 'E', ')', 'Single-pair', 'shortest-path', 'problem', '-', 'Caminho', 'mais', 'curto', 'entre', 'dois', 'pontos', 'O', 'algoritmo', 'de', 'Dijkstra', 'é', 'a', 'base', 'para', 'encontrar', 'o', 'caminho', 'mais', 'curto', 'entre', 'dois', 'pontos', 's', 'e', 't,', 'parando-se', 'a', 'pesquisa', 'quando', 'o', 'próximo', 'nó', 'a', 'processar', 'é', 'o', 'nó', 't.', 'Algoritmo', 'de', 'Dijkstra', 'pode', 'demorar', 'muitos', 'segundos', 'ou', 'minutos', 'a', 'encontrar', 'o', 'caminho', 'mais', 'curto', 'em', 'trajetos', 'de', 'longa', 'distância.', 'Otimizações', 'que', 'não', 'exigem', 'pré-processamento', 'conseguem', 'ganhos', '(speedup)', 'de', 'desempenho', 'modestos', '(até', '10x)', 'Com', 'pré-processamento,', 'conseguem-se', 'ganhos', 'da', 'ordem', 'de', '103', 'ou', 'mesmo', '106', ',', 'reduzindo', 'tempo', 'de', 'pesquisa', 'para', 'ms', 'ou', 'μs!', 'Otimização', '-', 'Pesquisa', 'bidirecional', 'Executar', 'o', 'algoritmo', 'de', 'Dijkstra', 'no', 'sentido', 'de', 's', 'para', 't', 'e', 'em', 'sentido', 'inverso', 'de', 't', 'para', 's', '(no', 'grafo', 'invertido),', 'alternando', 'entre', 'um', 'e', 'outro.', 'Terminar', 'quando', 'se', 'vai', 'processar', 'um', 'vértice', 'x', 'já', 'processado', 'na', 'outra', 'direção', '(podendo', 'o', 'caminho', 'mais', 'curto', 'passar', 'por', 'x', 'ou', 'não).', 'Manter', 'a', 'distância', 'μ', 'do', 'caminho', 'mais', 'curto', 'conhecido', 'entre', 's', 'e', 't:', 'ao', 'processar', 'uma', 'aresta', '(v,', 'w)', 'tal', 'que', 'w', 'já', 'foi', 'processado', 'na', 'outra', 'direção,', 'verificar', 'se', 'o', 'correspondente', 'caminho', 's-t', 'melhora', 'μ.', 'Retornar', 'a', 'distância', 'μ', 'e', 'o', 'caminho', 'correspondente.', 'Otimização', '-', 'Pesquisa', 'orientada', 'A*', 'Search', 'algorithm', 'is', 'one', 'of', 'the', 'best', 'and', 'popular', 'technique', 'used', 'in', 'path-finding', 'and', 'graph', 'traversals.', 'A*', 'is', 'like', 'Dijkstra’s', 'Algorithm', 'in', 'that', 'it', 'can', 'be', 'used', 'to', 'find', 'a', 'shortest', 'path.', 'A*', 'is', 'like', 'Greedy', 'Best-FirstSearch', 'in', 'that', 'it', 'can', 'use', 'a', 'heuristic', 'to', 'guide', 'itself.', 'In', 'the', 'simple', 'case,', 'it', 'is', 'as', 'fast', 'as', 'Greedy', 'Best-FirstSearch.', 'See', 'https://brilliant.org/wiki/a-star-search/', 'for', 'a', 'concrete', 'explanation', 'and', 'implementation', 'References:', 'http://theory.stanford.edu/~amitp/GameProgramming/AStarComparison.html#the-a-star-algorithm', 'https://www.redblobgames.com/pathfinding/a-star/implementation.html', 'https://medium.com/@nicholas.w.swift/easy-a-star-pathfinding-7e6689c7f7b2', 'Floyd', 'Warshall', 'Algorithm', '-', 'Caminho', 'mais', 'curto', 'entre', 'todos', 'os', 'pares', 'de', 'vértices', 'The', 'Floyd', 'Warshall', 'Algorithm', 'is', 'for', 'solving', 'the', 'All', 'Pairs', 'Shortest', 'Path', 'problem.', 'The', 'problem', 'is', 'to', 'find', 'shortest', 'distances', 'between', 'every', 'pair', 'of', 'vertices', 'in', 'a', 'given', 'edge', 'weighted', 'directed', 'Graph.', 'Baseia-se', 'em', 'matriz', 'de', 'adjacências', 'W', '[i,', 'j]', 'com', 'pesos', '(∞', 'quando', 'não', 'há', 'aresta;', '0', 'quando', 'i', '=', 'j)', 'Calcula', 'matriz', 'de', 'distâncias', 'mínimas', 'D[i,', 'j]', 'e', 'matriz', 'P', '[i,', 'j]', 'de', 'predecessor', 'no', 'caminho', 'mais', 'curto', 'de', 'i', 'para', 'j', 'We', 'initialize', 'the', 'solution', 'matrix', 'same', 'as', 'the', 'input', 'graph', 'matrix', 'as', 'a', 'first', 'step.', 'Then', 'we', 'update', 'the', 'solution', 'matrix', 'by', 'considering', 'all', 'vertices', 'as', 'an', 'intermediate', 'vertex.', 'The', 'idea', 'is', 'to', 'one', 'by', 'one', 'pick', 'all', 'vertices', 'and', 'updates', 'all', 'shortest', 'paths', 'which', 'include', 'the', 'picked', 'vertex', 'as', 'an', 'intermediate', 'vertex', 'in', 'the', 'shortest', 'path.', 'When', 'we', 'pick', 'vertex', 'number', 'k', 'as', 'an', 'intermediate', 'vertex,', 'we', 'already', 'have', 'considered', 'vertices', '{0,', '1,', '2,', '..k', '−', '1}', 'as', 'intermediate', 'vertices.', 'For', 'every', 'pair', '(i,', 'j)', 'of', 'the', 'source', 'and', 'destination', 'vertices', 'respectively,', 'there', 'are', 'two', 'possible', 'cases.', '1.', 'k', 'is', 'not', 'an', 'intermediate', 'vertex', 'in', 'shortest', 'path', 'from', 'i', 'to', 'j.', 'We', 'keep', 'the', 'value', 'of', 'dist[i][j]', 'as', 'it', 'is.', '2.', 'k', 'is', 'an', 'intermediate', 'vertex', 'in', 'shortest', 'path', 'from', 'i', 'to', 'j.', 'We', 'update', 'the', 'value', 'of', 'dist[i][j]', 'as', 'dist[i][k]', '+', 'dist[k][j]', 'if', 'dist[i][j]', '>', 'dist[i][k]', '+', 'dist[k][j]', 'The', 'following', 'figure', 'shows', 'the', 'above', 'optimal', 'substructure', 'property', 'in', 'the', 'all-pairs', 'shortest', 'path', 'problem.', '//', 'C++', 'Program', 'for', 'Floyd', 'Warshall', 'Algorithm', '#include', '<bits/stdc++.h>', 'using', 'namespace', 'std;', '//', 'Number', 'of', 'vertices', 'in', 'the', 'graph', '#define', 'V', '4', '/*', 'Define', 'Infinite', 'as', 'a', 'large', 'enough', 'value.This', 'value', 'will', 'be', 'used', 'for', 'vertices', 'not', 'connected', 'to', 'each', 'other', '*/', '#define', 'INF', '99999', '//', 'A', 'function', 'to', 'print', 'the', 'solution', 'matrix', 'void', 'printSolution(int', 'dist[][V]);', '//', 'Solves', 'the', 'all-pairs', 'shortest', 'path', '//', 'problem', 'using', 'Floyd', 'Warshall', 'algorithm', 'void', 'floydWarshall', '(int', 'graph[][V])', '{', '/*', 'dist[][]', 'will', 'be', 'the', 'output', 'matrix', 'that', 'will', 'finally', 'have', 'the', 'shortest', 'distances', 'between', 'every', 'pair', 'of', 'vertices', '*/', 'int', 'dist[V][V],', 'i,', 'j,', 'k;', '/*', 'Initialize', 'the', 'solution', 'matrix', 'same', 'as', 'input', 'graph', 'matrix.', 'Or', 'we', 'can', 'say', 'the', 'initial', 'values', 'of', 'shortest', 'distances', 'are', 'based', 'on', 'shortest', 'paths', 'considering', 'no', 'intermediate', 'vertex.', '*/', 'for', '(i', '=', '0;', 'i', '<', 'V;', 'i++)', 'for', '(j', '=', '0;', 'j', '<', 'V;', 'j++)', 'dist[i][j]', '=', 'graph[i][j];', '/*', 'Add', 'all', 'vertices', 'one', 'by', 'one', 'to', 'the', 'set', 'of', 'intermediate', 'vertices.', '--->', 'Before', 'start', 'of', 'an', 'iteration,', 'we', 'have', 'shortest', 'distances', 'between', 'all', 'pairs', 'of', 'vertices', 'such', 'that', 'the', 'shortest', 'distances', 'consider', 'only', 'the', 'vertices', 'in', 'set', '{0,', '1,', '2,', '..', 'k-1}', 'as', 'intermediate', 'vertices.', '---->', 'After', 'the', 'end', 'of', 'an', 'iteration,', 'vertex', 'no.', 'k', 'is', 'added', 'to', 'the', 'set', 'of', 'intermediate', 'vertices', 'and', 'the', 'set', 'becomes', '{0,', '1,', '2,', '..', 'k}', '*/', 'for', '(k', '=', '0;', 'k', '<', 'V;', 'k++)', '{', '//', 'Pick', 'all', 'vertices', 'as', 'source', 'one', 'by', 'one', 'for', '(i', '=', '0;', 'i', '<', 'V;', 'i++)', '{', '//', 'Pick', 'all', 'vertices', 'as', 'destination', 'for', 'the', '//', 'above', 'picked', 'source', 'for', '(j', '=', '0;', 'j', '<', 'V;', 'j++)', '{', '//', 'If', 'vertex', 'k', 'is', 'on', 'the', 'shortest', 'path', 'from', '//', 'i', 'to', 'j,', 'then', 'update', 'the', 'value', 'of', 'dist[i][j]', 'if', '(dist[i][k]', '+', 'dist[k][j]', '<', 'dist[i][j])', 'dist[i][j]', '=', 'dist[i][k]', '+', 'dist[k][j];', '}', '}', '}', '//', 'Print', 'the', 'shortest', 'distance', 'matrix', 'printSolution(dist);', '}', '/*', 'A', 'utility', 'function', 'to', 'print', 'solution', '*/', 'void', 'printSolution(int', 'dist[][V])', '{', 'cout<<"The', 'following', 'matrix', 'shows', 'the', 'shortest', 'distances"', '"', 'between', 'every', 'pair', 'of', 'vertices', '\\n";', 'for', '(int', 'i', '=', '0;', 'i', '<', 'V;', 'i++)', '{', 'for', '(int', 'j', '=', '0;', 'j', '<', 'V;', 'j++)', '{', 'if', '(dist[i][j]', '==', 'INF)', 'cout<<"INF"<<"', '";', 'else', 'cout<<dist[i][j]<<"', '";', '}', 'cout<<endl;', '}', '}', '//', 'Driver', 'code', 'int', 'main()', '{', '/*', 'Let', 'us', 'create', 'the', 'following', 'weighted', 'graph', '10', '(0)------->(3)', '|', '/|\\', '5', '|', '|', '|', '|', '1', '\\|/', '|', '(1)------->(2)', '3', '*/', 'int', 'graph[V][V]', '=', '{', '{0,', '5,', 'INF,', '10},', '{INF,', '0,', '3,', 'INF},', '{INF,', 'INF,', '0,', '1},', '{INF,', 'INF,', 'INF,', '0}', '};', '//', 'Print', 'the', 'solution', 'floydWarshall(graph);', 'return', '0;', '}', '//', 'This', 'code', 'is', 'contributed', 'by', 'rathbhupendra', '//', 'https://www.geeksforgeeks.org/floyd-warshall-algorithm-dp-16/', 'Time', 'Complexity:', 'O(V^3)', 'Path', 'Reconstruction', 'The', 'above', 'program', 'only', 'prints', 'the', 'shortest', 'distances.', 'We', 'can', 'modify', 'the', 'solution', 'to', 'print', 'the', 'shortest', 'paths', 'also', 'by', 'storing', 'the', 'predecessor', 'information', 'in', 'a', 'separate', '2D', 'matrix.', 'In', 'general,', 'Floyd-Warshall,', 'at', 'its', 'most', 'basic,', 'only', 'provides', 'the', 'distances', 'between', 'vertices', 'in', 'the', 'resulting', 'matrix.', 'However,', 'a', 'simple', 'change', 'can', 'allow', 'the', 'algorithm', 'to', 'reconstruct', 'the', 'shortest', 'path', 'as', 'well.', 'There', 'are', 'many', 'different', 'ways', 'to', 'do', 'this,', 'and', 'all', 'of', 'them', 'have', 'their', 'costs', 'in', 'memory.', 'Speed', 'is', 'not', 'a', 'factor', 'with', 'path', 'reconstruction', 'because', 'any', 'time', 'it', 'takes', 'to', 'reconstruct', 'the', 'path', 'will', 'pale', 'in', 'comparison', 'to', 'the', 'basic', 'algorithm', 'itself.', 'The', 'most', 'common', 'way', 'is', 'to', 'compute', 'a', 'sequence', 'of', 'predecessor', 'matrices.', 'During', 'path', 'calculation,', 'even', '(k)', 'the', 'matrices', 'P', '(0)', ',', 'P', '(1)', ',', '...,', 'P', '(n)', 'can', 'be', 'computed.', 'Pij', 'is', 'defined', 'as', 'the', 'predecessor', 'of', 'vertex', 'j', 'on', 'a', 'shortest', 'path', 'from', 'vertex', 'i', 'with', 'all', 'intermediate', 'vertices', 'in', 'the', 'set', '1,2,...,k.', 'So,', 'for', 'each', 'iteration', 'of', 'the', 'main', 'loop,', 'a', 'new', 'predecessor', 'matrix', 'is', 'created.', 'The', 'recursive', 'formula', 'for', 'this', 'predecessor', 'matrix', 'is', 'as', 'follows:', '(0)', '{', 'if', 'i', '=', 'j', 'or', 'weight(i,j)', '=', '∞,', 'Pij', '=', '0', '(0)', 'if', 'i', '\ue020', '=', 'j', 'or', 'weight(i,j)', '<', '∞,', 'Pij', '=', 'i', 'Floyd-Warshall', 'Algorithm.', 'Brilliant.org.', 'https://brilliant.org/wiki/floyd-warshall-algorithm/', 'Resume', 'The', 'Floyd-Warshall', 'algorithm', 'is', 'a', 'shortest', 'path', 'algorithm', 'for', 'graphs.', 'Like', 'the', 'Bellman-Ford', 'algorithm', 'or', 'the', "Dijkstra's", 'algorithm,', 'it', 'computes', 'the', 'shortest', 'path', 'in', 'a', 'graph.', 'However,', 'Bellman-Ford', 'and', 'Dijkstra', 'are', 'both', 'single-source,', 'shortest-path', 'algorithms.', 'This', 'means', 'they', 'only', 'compute', 'the', 'shortest', 'path', 'from', 'a', 'single', 'source.', 'Floyd-Warshall,', 'on', 'the', 'other', 'hand,', 'computes', 'the', 'shortest', 'distances', 'between', 'every', 'pair', 'of', 'vertices', 'in', 'the', 'input', 'graph.', 'So', 'when', 'to', 'use', 'DFS', 'over', 'A*,', 'when', 'to', 'use', 'Dijkstra', 'over', 'A*', 'to', 'find', 'the', 'shortest', 'paths', '?', 'We', 'can', 'summarise', 'this', 'as', 'below:', '1.', 'One', 'source', 'and', 'One', 'Destination', '→', 'Use', 'A*', 'Search', 'Algorithm', '(For', 'Unweighted', 'as', 'well', 'as', 'Weighted', 'Graphs)', '2.', 'One', 'Source,', 'All', 'Destination', '→', 'Use', 'BFS', '(For', 'Unweighted', 'Graphs)', '→', 'Use', 'Dijkstra', '(For', 'Weighted', 'Graphs', 'without', 'negative', 'weights)', '→', 'Use', 'Bellman', 'Ford', '(For', 'Weighted', 'Graphs', 'with', 'negative', 'weights)', '3.', 'Between', 'every', 'pair', 'of', 'nodes', '→', 'Floyd-Warshall', '→', 'Johnson’s', 'Algorithm', 'Minimum', 'spanning', 'tree', 'Informally,', 'a', 'minimum', 'spanning', 'tree', 'of', 'an', 'undirected', 'graph', 'G', 'is', 'a', 'tree', 'formed', 'from', 'graph', 'edges', 'that', 'connects', 'all', 'the', 'vertices', 'of', 'G', 'at', 'lowest', 'total', 'cost.', 'A', 'minimum', 'spanning', 'tree', 'exists', 'if', 'and', 'only', 'if', 'G', 'is', 'connected.', 'The', 'number', 'of', 'edges', 'in', 'the', 'minimum', 'spanning', 'tree', 'is', '|V|', '−', '1.', 'The', 'minimum', 'spanning', 'tree', 'is', 'a', 'tree', 'because', 'it', 'is', 'acyclic', 'It', 'is', 'spanning', 'because', 'it', 'covers', 'every', 'vertex,', 'and', 'it', 'is', 'minimum', 'for', 'the', 'obvious', 'reason.', 'For', 'any', 'spanning', 'tree', 'T,', 'if', 'an', 'edge', 'e', 'that', 'is', 'not', 'in', 'T', 'is', 'added,', 'a', 'cycle', 'is', 'created.', 'The', 'removal', 'of', 'any', 'edge', 'on', 'the', 'cycle', 'reinstates', 'the', 'spanning', 'tree', 'property.', 'The', 'cost', 'of', 'the', 'spanning', 'tree', 'is', 'lowered', 'if', 'e', 'has', 'lower', 'cost', 'than', 'the', 'edge', 'that', 'was', 'removed.', 'If,', 'as', 'a', 'spanning', 'tree', 'is', 'created,', 'the', 'edge', 'that', 'is', 'added', 'is', 'the', 'one', 'of', 'minimum', 'cost', 'that', 'avoids', 'creation', 'of', 'a', 'cycle,', 'then', 'the', 'cost', 'of', 'the', 'resulting', 'spanning', 'tree', 'cannot', 'be', 'improved,', 'because', 'any', 'replacement', 'edge', 'would', 'have', 'cost', 'at', 'least', 'as', 'much', 'as', 'an', 'edge', 'already', 'in', 'the', 'spanning', 'tree.', 'See', 'https://brilliant.org/wiki/spanning-trees/', 'Prim’s', 'Algorithm', 'One', 'way', 'to', 'compute', 'a', 'minimum', 'spanning', 'tree', 'is', 'to', 'grow', 'the', 'tree', 'in', 'successive', 'stages.', 'In', 'each', 'stage,', 'one', 'node', 'is', 'picked', 'as', 'the', 'root,', 'and', 'we', 'add', 'an', 'edge,', 'and', 'thus', 'an', 'associated', 'vertex,', 'to', 'the', 'tree.', 'At', 'any', 'point', 'in', 'the', 'algorithm,', 'we', 'can', 'see', 'that', 'we', 'have', 'a', 'set', 'of', 'vertices', 'that', 'have', 'already', 'been', 'included', 'in', 'the', 'tree;', 'the', 'rest', 'of', 'the', 'vertices', 'have', 'not.', 'The', 'algorithm', 'then', 'finds,', 'at', 'each', 'stage,', 'a', 'new', 'vertex', 'to', 'add', 'to', 'the', 'tree', 'by', 'choosing', 'the', 'edge', '(u,', 'v)', 'such', 'that', 'the', 'cost', 'of', '(u,', 'v)', 'is', 'the', 'smallest', 'among', 'all', 'edges', 'where', 'u', 'is', 'in', 'the', 'tree', 'and', 'v', 'is', 'not.', 'For', 'this', 'problem,', 'the', 'update', 'rule', 'is:', 'After', 'a', 'vertex', 'v', 'is', 'selected,', 'for', 'each', 'unknown', 'w', 'adjacent', 'to', 'v,', 'dw', '=', 'min(dw', ',', 'costw,v', ').', 'Informação', 'para', 'cada', 'vértice', 'dist(v)', 'é', 'o', 'custo', 'mínimo', 'das', 'arestas', 'que', 'ligam', 'a', 'um', 'vértice', 'já', 'na', 'árvore', 'path(v)', 'é', 'o', 'último', 'vértice', 'a', 'alterar', 'dist(v)', 'known(v)', 'indica', 'se', 'o', 'vértice', 'já', 'foi', 'processado', '(i.e.,', 'já', 'pertence', 'à', 'árvore)', 'Diferença', 'na', 'regra', 'de', 'actualização:', 'após', 'a', 'selecção', 'do', 'vértice', 'v,', 'para', 'cada', 'w', 'não', 'processado,', 'adjacente', 'a', 'v,', 'dist(w)', '=', 'min{dist(w),', 'cost(v,', 'w)}', 'The', 'running', 'time', 'is', 'O(', '|V|^2', ')', 'without', 'heaps,', 'which', 'is', 'optimal', 'for', 'dense', 'graphs,', 'and', 'O(|E|', 'x', 'log', '|V|)', 'using', 'binary', 'heaps,', 'which', 'is', 'good', 'for', 'sparse', 'graphs.', 'Kruskal’s', 'Algorithm', 'Formally,', 'Kruskal’s', 'algorithm', 'maintains', 'a', 'forest—a', 'collection', 'of', 'trees.', 'Initially,', 'there', 'are', '|V|', 'single-node', 'trees.', 'Adding', 'an', 'edge', 'merges', 'two', 'trees', 'into', 'one.', 'When', 'the', 'algorithm', 'terminates,', 'there', 'is', 'only', 'one', 'tree,', 'and', 'this', 'is', 'the', 'minimum', 'spanning', 'tree.', 'The', 'algorithm', 'terminates', 'when', 'enough', 'edges', 'are', 'accepted.', 'It', 'turns', 'out', 'to', 'be', 'simple', 'to', 'decide', 'whether', 'edge', '(u,', 'v)', 'should', 'be', 'accepted', 'or', 'rejected.', 'The', 'invariant', 'we', 'will', 'use', 'is', 'that', 'at', 'any', 'point', 'in', 'the', 'process,', 'two', 'vertices', 'belong', 'to', 'the', 'same', 'set', 'if', 'and', 'only', 'if', 'they', 'are', 'connected', 'in', 'the', 'current', 'spanning', 'forest.', 'Thus,', 'each', 'vertex', 'is', 'initially', 'in', 'its', 'own', 'set.', 'If', 'u', 'and', 'v', 'are', 'in', 'the', 'same', 'set,', 'the', 'edge', 'is', 'rejected,', 'because', 'since', 'they', 'are', 'already', 'connected,', 'adding', '(u,', 'v)', 'would', 'form', 'a', 'cycle.', 'Otherwise,', 'the', 'edge', 'is', 'accepted,', 'and', 'a', 'union', 'is', 'performed', 'on', 'the', 'two', 'sets', 'containing', 'u', 'and', 'v.', 'The', 'edges', 'could', 'be', 'sorted', 'to', 'facilitate', 'the', 'selection,', 'but', 'building', 'a', 'heap', 'in', 'linear', 'time', 'is', 'a', 'much', 'better', 'idea.', 'Then', 'deleteMin(s)', 'give', 'the', 'edges', 'to', 'be', 'tested', 'in', 'order.', 'selecção', 'de', 'arestas:', 'ordenar', 'por', 'peso', 'ou,', 'melhor,', 'construir', 'fila', 'de', 'prioridade', 'em', 'tempo', 'linear', 'e', 'usar', 'deleteMin(heapsort)', 'void', 'kruskal()', '{', 'int', 'edgesAccepted', '=', '0;', 'PriorityQueue<Edge>', 'h', '=', 'readGraphIntoHeapArray();', 'h.buildHeap();', 'DisjSet<Vertex>', 's', '=', 'new', 'DisjSet(NUM_VERTICES);', 'while(edgesAccepted', '<', 'NUM_VERTICES', '-1', ')', '{', 'Edge', 'e', '=', 'h.deleteMin();', '//', 'e', '=', '(u,v)', 'SetType', 'uset', '=', 's.find(u);', 'SetType', 'vset', '=', 's.find(v);', 'if', '(uset', '!=', 'vset)', '{', 'edgesAccepted++;', 's.union(uset,', 'vset);', '}', '}', '}', 'Tempo', 'de', 'Execução:', '•', 'tempo', 'no', 'pior', 'caso', 'O(', 'E', 'log(E)', '),', 'dominado', 'pelas', 'operações', 'na', 'fila', '•', 'como', 'E', '=', 'V', '2', ',', 'log(E)', '=', '2', 'x', 'log(V),', 'logo', 'eficiência', 'é', 'também', 'O(E', 'x', 'log(V))', 'Applications', 'of', 'Depth-First', 'Search', 'Depth-first', 'search', 'is', 'a', 'generalization', 'of', 'preorder', 'traversal.', 'Starting', 'at', 'some', 'vertex,', 'v,', 'we', 'process', 'v', 'and', 'then', 'recursively', 'traverse', 'all', 'vertices', 'adjacent', 'to', 'v.', 'If', 'this', 'process', 'is', 'performed', 'on', 'a', 'tree,', 'then', 'all', 'tree', 'vertices', 'are', 'systematically', 'visited', 'in', 'a', 'total', 'of', 'O(|E|)', 'time,', 'since', '|E|', '=', 'O(|V|).', 'If', 'we', 'perform', 'this', 'process', 'on', 'an', 'arbitrary', 'graph,', 'we', 'need', 'to', 'be', 'careful', 'to', 'avoid', 'cycles.', 'To', 'do', 'this,', 'when', 'we', 'visit', 'a', 'vertex', 'v,', 'we', 'mark', 'it', 'visited,', 'since', 'now', 'we', 'have', 'been', 'there,', 'and', 'recursively', 'call', 'depth-first', 'search', 'on', 'all', 'adjacent', 'vertices', 'that', 'are', 'not', 'already', 'marked.', 'We', 'implicitly', 'assume', 'that', 'for', 'undirected', 'graphs', 'every', 'edge', '(v,', 'w)', 'appears', 'twice', 'in', 'the', 'adjacency', 'lists:', 'once', 'as', '(v,', 'w)', 'and', 'once', 'as', '(w,', 'v).', 'void', 'dfs(', 'Vertex', 'v', ')', '{', 'v.visited', '=', 'true;', 'for', 'each', 'Vertex', 'w', 'adjacent', 'to', 'v', 'if(', '!w.visited', ')', 'dfs(', 'w', ');', '}', 'For', 'each', 'vertex,', 'the', 'field', 'visited', 'is', 'initialized', 'to', 'false', '.', 'By', 'recursively', 'calling', 'the', 'procedures', 'only', 'on', 'nodes', 'that', 'have', 'not', 'been', 'visited,', 'we', 'guarantee', 'that', 'we', 'do', 'not', 'loop', 'indefinitely.', 'Because', 'this', 'strategy', 'guarantees', 'that', 'each', 'edge', 'is', 'encountered', 'only', 'once,', 'the', 'total', 'time', 'to', 'perform', 'the', 'traversal', 'is', 'O(|E|', '+', '|V|),', 'as', 'long', 'as', 'adjacency', 'lists', 'are', 'used.', 'Undirected', 'Graphs', 'An', 'undirected', 'graph', 'is', 'connected', 'if', 'and', 'only', 'if', 'a', 'depth-first', 'search', 'starting', 'from', 'any', 'node', 'visits', 'every', 'node.', 'The', 'tree', 'will', 'simulate', 'the', 'traversal', 'we', 'performed.', 'A', 'preorder', 'numbering', 'of', 'the', 'tree,', 'using', 'only', 'tree', 'edges,', 'tells', 'us', 'the', 'order', 'in', 'which', 'the', 'vertices', 'were', 'marked.', 'If', 'the', 'graph', 'is', 'not', 'connected,', 'then', 'processing', 'all', 'nodes', '(and', 'edges)', 'requires', 'several', 'calls', 'to', 'dfs', ',', 'and', 'each', 'generates', 'a', 'tree.', 'This', 'entire', 'collection', 'is', 'a', 'depth-first', 'spanning', 'forest.', 'Biconectivity', 'A', 'connected', 'undirected', 'graph', 'is', 'biconnected', 'if', 'there', 'are', 'no', 'vertices', 'whose', 'removal', 'disconnects', 'the', 'rest', 'of', 'the', 'graph.', 'The', 'graph', 'in', 'the', 'example', 'above', 'is', 'biconnected.', 'If', 'a', 'graph', 'is', 'not', 'biconnected,', 'the', 'vertices', 'whose', 'removal', 'would', 'disconnect', 'the', 'graph', 'are', 'known', 'as', 'articulation', 'points.', 'Depth-first', 'search', 'provides', 'a', 'linear-time', 'algorithm', 'to', 'find', 'all', 'articulation', 'points', 'in', 'a', 'connected', 'graph.', 'First,', 'starting', 'at', 'any', 'vertex,', 'we', 'perform', 'a', 'depth-first', 'search', 'and', 'number', 'the', 'nodes', 'as', 'they', 'are', 'visited.', 'For', 'each', 'vertex', 'v,', 'we', 'call', 'this', 'preorder', 'number', 'Num(v).', 'Then,', 'for', 'every', 'vertex', 'v', 'in', 'the', 'depth-first', 'search', 'spanning', 'tree,', 'we', 'compute', 'the', 'lowest-numbered', 'vertex,', 'which', 'we', 'call', 'Low(v),', 'that', 'is', 'reachable', 'from', 'v', 'by', 'taking', 'zero', 'or', 'more', 'tree', 'edges', 'and', 'then', 'possibly', 'one', 'back', 'edge', '(in', 'that', 'order).', 'We', 'can', 'efficiently', 'compute', 'Low', 'by', 'performing', 'a', 'postorder', 'traversal', 'of', 'the', 'depth-first', 'spanning', 'tree.', 'By', 'the', 'definition', 'of', 'Low,', 'Low(v)', 'is', 'the', 'minimum', 'of:', '1.', 'Num(v)', '2.', 'the', 'lowest', 'Num(w)', 'among', 'all', 'back', 'edges', '(v,', 'w)', '3.', 'the', 'lowest', 'Low(w)', 'among', 'all', 'tree', 'edges', '(v,', 'w)', 'The', 'first', 'condition', 'is', 'the', 'option', 'of', 'taking', 'no', 'edges,', 'the', 'second', 'way', 'is', 'to', 'choose', 'no', 'tree', 'edges', 'and', 'a', 'back', 'edge,', 'and', 'the', 'third', 'way', 'is', 'to', 'choose', 'some', 'tree', 'edges', 'and', 'possibly', 'a', 'back', 'edge.', 'This', 'third', 'method', 'is', 'succinctly', 'described', 'with', 'a', 'recursive', 'call.', 'Since', 'we', 'need', 'to', 'evaluate', 'Low', 'for', 'all', 'the', 'children', 'of', 'v', 'before', 'we', 'can', 'evaluate', 'Low(v),', 'this', 'is', 'a', 'postorder', 'traversal.', 'For', 'any', 'edge', '(v,', 'w),', 'we', 'can', 'tell', 'whether', 'it', 'is', 'a', 'tree', 'edge', 'or', 'a', 'back', 'edge', 'merely', 'by', 'checking', 'Num(v)', 'and', 'Num(w).', 'Thus,', 'it', 'is', 'easy', 'to', 'compute', 'Low(v):', 'We', 'merely', 'scan', 'down', 'v’s', 'adjacency', 'list,', 'apply', 'the', 'proper', 'rule,', 'and', 'keep', 'track', 'of', 'the', 'minimum.', 'Doing', 'all', 'the', 'computation', 'takes', 'O(|E|', '+', '|V|)', 'time.', 'Any', 'other', 'vertex', 'v', 'is', 'an', 'articulation', 'point', 'if', 'and', 'only', 'if', 'v', 'has', 'some', 'child', 'w', 'such', 'that', 'Low(w)', '≥', 'Num(v).', 'Notice', 'that', 'this', 'condition', 'is', 'always', 'satisfied', 'at', 'the', 'root;', 'hence', 'the', 'need', 'for', 'a', 'special', 'test.', '//', 'Procura', 'Pontos', 'de', 'Articulação', 'usando', 'dfs', '//', 'Contador', 'global', 'e', 'inicializado', 'a', '1', 'void', 'findArt(', 'Vertex', 'v)', '{', 'v.visited', '=', 'true;', 'v.low', '=', 'v.num', '=', 'counter++;', 'for', 'each', 'w', 'adjacent', 'to', 'v', 'if(', '!w.visited', ')', '{', '//', 'ramo', 'da', 'árvore', 'w.parent', '=', 'v;', 'findArt(w);', 'v.low', '=', 'min(v.low,', 'w.low);', 'if(w.low', '>=', 'v.num', ')', 'System.out.println(v,', '"', 'Ponto', 'de', 'articulação', '");', '}', 'else', 'if', '(', 'v.parent', '!=', 'w', ')', '//aresta', 'de', 'retorno', 'v.low', '=', 'min(v.low,', 'w.num);', '}', 'Directed', 'Graphs', 'Using', 'the', 'same', 'strategy', 'as', 'with', 'undirected', 'graphs,', 'directed', 'graphs', 'can', 'be', 'traversed', 'in', 'linear', 'time,', 'using', 'depth-first', 'search.', 'If', 'the', 'graph', 'is', 'not', 'strongly', 'connected,', 'a', 'depth-first', 'search', 'starting', 'at', 'some', 'node', 'might', 'not', 'visit', 'all', 'nodes.', 'In', 'this', 'case', 'we', 'repeatedly', 'perform', 'depth-first', 'searches,', 'starting', 'at', 'some', 'unmarked', 'node,', 'until', 'all', 'vertices', 'have', 'been', 'visited.', 'Finding', 'Strong', 'Components', 'By', 'performing', 'two', 'depth-first', 'searches,', 'we', 'can', 'test', 'whether', 'a', 'directed', 'graph', 'is', 'strongly', 'connected,', 'and', 'if', 'it', 'is', 'not,', 'we', 'can', 'actually', 'produce', 'the', 'subsets', 'of', 'vertices', 'that', 'are', 'strongly', 'connected', 'to', 'themselves.', 'First,', 'a', 'depth-first', 'search', 'is', 'performed', 'on', 'the', 'input', 'graph', 'G.', 'The', 'vertices', 'of', 'G', 'are', 'numbered', 'by', 'a', 'postorder', 'traversal', 'of', 'the', 'depth-first', 'spanning', 'forest,', 'and', 'then', 'all', 'edges', 'in', 'G', 'are', 'reversed,', 'forming', 'Gr.', 'The', 'algorithm', 'is', 'completed', 'by', 'performing', 'a', 'depth-first', 'search', 'on', 'Gr,', 'always', 'starting', 'a', 'new', 'depth-first', 'search', 'at', 'the', 'highest-numbered', 'vertex.', '•', 'Pesquisa', 'em', 'profundidade', 'no', 'grafo', 'G', 'determina', 'floresta', 'de', 'expansão,', 'numerando', 'vértices', 'em', 'pósordem', '(ordem', 'inversa', 'de', 'numeração', 'em', 'pré-ordem)', '•', 'Inverter', 'todas', 'as', 'arestas', 'de', 'G', '(grafo', 'resultante', 'é', 'Gr)', '•', 'Segunda', 'pesquisa', 'em', 'profundidade,', 'em', 'Gr,', 'começando', 'sempre', 'pelo', 'vértice', 'de', 'numeração', 'mais', 'alta', 'ainda', 'não', 'visitado', '•', 'Cada', 'árvore', 'obtida', 'é', 'um', 'componente', 'fortemente', 'conexo,', 'i.e.,', 'a', 'partir', 'de', 'um', 'qualquer', 'dos', 'nós', 'pode', 'chegar-se', 'a', 'todos', 'os', 'outros','END'];
module.exports = {npages, text};